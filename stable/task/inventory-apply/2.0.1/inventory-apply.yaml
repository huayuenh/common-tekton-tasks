---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: inventory-apply
  labels:
    app.kubernetes.io/version: "2.0.1"
    tekton.dev/deprecated: true
spec:
  params:
    - name: change-request-id
      description: unique servicenow change request id
    - name: target-environment
      description: deployment target environment
    - name: inventory-folder
      description: directory name where the inventory located
    - name: git-api-token-key
      description: github enterprise api token secret name
      default: "git-token"
    - name: retry-count
      description: retry count to pull and push git evidence repo
      default: "5"
    - name: retry-delay
      description: the amount of seconds between the retries
      default: "5"
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"

  stepTemplate:
    env:
      - name: PIPELINE_DEBUG
        value: $(params.pipeline-debug)
      - name: PIPELINE_RUN_ID
        valueFrom:
          fieldRef:
            fieldPath: metadata.annotations['devops.cloud.ibm.com/tekton-pipeline']

  steps:
    - name: merge
      image: ibmcom/pipeline-base-image:2.6@sha256:7f588468622a981f89cf5e1212aaf75fface9da6169b5345ca52ab63d8215907
      env:
        - name: CHANGE_REQUEST_ID
          value: $(params.change-request-id)
        - name: INVENTORY_FOLDER
          value: $(params.inventory-folder)
      script: |
        #!/bin/bash

        if [ "$PIPELINE_DEBUG" == 1 ]; then
          pwd
          env
          trap env EXIT
          set -x
        fi

        GIT_TOKEN=$(cat "/secrets/$(params.git-api-token-key)")

        git config --global user.email "tekton@example.com"
        git config --global user.name "Tekton"

        clone_inventory_script() {
          git clone https://"$GIT_TOKEN"@github.ibm.com/cocoa/inventory-script.git
          export PATH="$(pwd)/inventory-script:$PATH"
        }

        merge_inventory_branch() {
          cd /artifacts/"$INVENTORY_FOLDER" || exit

          inventory conclude "$CHANGE_REQUEST_ID" "$(params.target-environment)"
        }

        source /scripts/retry_command.sh

        retry $(params.retry-count) $(params.retry-delay) clone_inventory_script

        exit_code=$?

        if [ $exit_code -ne 0 ]; then
          echo "Error cloning inventory repository. There might be a github downtime, you can check it here: https://ibmtoolbox.statuspage.io"
          exit $exit_code
        fi

        #
        # check if the cr branch exists in inventory
        # and fail gracefully if not
        #

        cd /artifacts/"$INVENTORY_FOLDER" || exit

        git branch --list -a | grep "${CHANGE_REQUEST_ID}$" > /dev/null
        cr_branch_exists=$?

        if [ $cr_branch_exists != 0 ]; then
          echo "Nothing to conclude, source and target probably had the same content. Make sure Deployment Delta was not empty."
          exit 0
        fi

        #
        # conclude the deployment, merge the inventory changes to the target
        #

        retry $(params.retry-count) $(params.retry-delay) merge_inventory_branch

        exit_code=$?

        if [ $exit_code -ne 0 ]; then
          echo "Error merging the change request inventory branch. There might be a github downtime, you can check it here: https://ibmtoolbox.statuspage.io"
          exit $exit_code
        fi

      volumeMounts:
        - mountPath: /scripts
          name: retry-command

  workspaces:
    - name: artifacts
      mountPath: /artifacts
    - name: secrets
      mountPath: /secrets

  volumes:
    - name: retry-command
      configMap:
        name: retry-command
        items:
          - key: retry_command.sh
            path: retry_command.sh
