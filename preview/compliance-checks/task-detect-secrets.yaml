---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: compliance-detect-secrets
  labels:
    tekton.dev/deprecated: true
spec:
  params:
    - name: app-directory
      description: path of the application
      default: ""

  results:
    - name: exit-code
      description: The exit-code of the script
    - name: status
      description: The status based on exit-code

  steps:
    - name: detect-secrets
      image: wcp-compliance-automation-team-docker-local.artifactory.swg-devops.com/detect-secrets:0.13.1.ibm.22.dss
      workingDir: /artifacts/$(params.app-directory)/
      script: |
          #!/usr/bin/env python3

          import subprocess
          import json

          print(subprocess.run(['detect-secrets', 'scan', '--update', '.secrets.baseline']))
          found_secrets = []

          with open('.secrets.baseline', 'r') as f:
            baseline = json.loads(f.read())
            for file, secrets in baseline['results'].items():
              for secret in secrets:
                if secret.get('is_secret', True):
                  found_secrets.append((file, secret))

          if found_secrets:
            print('FOUND SECRETS:')
            for secret in found_secrets:
                print('File: ' + secret[0] + ' Line: ' + str(secret[1]['line_number']) + ' Type: ' + secret[1]['type'])
            print('failure', file = open('$(results.status.path)', 'w+'), end='')
            print('1', file = open('$(results.exit-code.path)', 'w+'), end='')
          else:
            print('NO SECRETS FOUND')
            print('success', file = open('$(results.status.path)', 'w+'), end='')
            print('0', file = open('$(results.exit-code.path)', 'w+'), end='')

  workspaces:
    - name: artifacts
      mountPath: /artifacts
