---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: inventory-get-pipeline-run-id
  labels:
    tekton.dev/deprecated: true
spec:
  params:
    - name: app-name
      description: name of the app to be deployed
    - name: inventory-folder
      description: directory name where the inventory located
    - name: git-api-token-key
      description: github enterprise api token secret name
      default: "git-token"
    - name: retry-count
      description: retry count to pull and push git evidence repo
      default: "5"
    - name: retry-delay
      description: the amount of seconds between the retries
      default: "5"
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"

  results:
    - name: pipeline-run-id
      description: the id of the pipeline which built the app of given version

  stepTemplate:
    env:
      - name: PIPELINE_DEBUG
        value: $(params.pipeline-debug)
      - name: INVENTORY_FOLDER
        value: $(params.inventory-folder)

  steps:
    - name: get-pipeline-run-id
      image: ibmcom/pipeline-base-image:2.6
      env:
        - name: INVENTORY_FOLDER
          value: $(params.inventory-folder)
      script: |
          #!/bin/bash
          set -e -o pipefail;

          if [ "$PIPELINE_DEBUG" == 1 ]; then
            env
            trap env EXIT
            set -x
          fi

          GIT_TOKEN=$(cat "/secrets/$(params.git-api-token-key)")

          git config --global user.email "tekton@example.com"
          git config --global user.name "Tekton"

          clone_inventory_script() {
            git clone "https://$GIT_TOKEN@github.ibm.com/cocoa/inventory-script.git"
            export PATH="$(pwd)/inventory-script:$PATH"
          }

          get_pipeline_run_id() {
            cd /artifacts/"$INVENTORY_FOLDER"

            inventory get "$(params.app-name)" prod_candidate pipeline_run_id | tee $(results.pipeline-run-id.path)
          }

          source /scripts/retry_command.sh

          retry $(params.retry-count) $(params.retry-delay) clone_inventory_script

          exit_code=$?

          if [ $exit_code -ne 0 ]; then
            echo "Error getting the pipeline run id from the given version. There might be a github downtime, you can check it here: https://ibmtoolbox.statuspage.io"
            exit $exit_code
          fi

          retry $(params.retry-count) $(params.retry-delay) get_pipeline_run_id

          exit_code=$?

          if [ $exit_code -ne 0 ]; then
            echo "Error getting the pipeline run id from the given version. There might be a github downtime, you can check it here: https://ibmtoolbox.statuspage.io"
            exit $exit_code
          fi

      volumeMounts:
        - mountPath: /scripts
          name: retry-command

  workspaces:
    - name: artifacts
      mountPath: /artifacts
    - name: secrets
      mountPath: /secrets

  volumes:
    - name: retry-command
      configMap:
        name: retry-command
        items:
          - key: retry_command.sh
            path: retry_command.sh
